{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gandharv Munjal\\\\Downloads\\\\gif generator\\\\src\\\\components\\\\Tag.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-lone-blocks */\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Spinner } from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REACT_APP_GIPHY_API_KEY = \"XwhWiqUuVYskOnSfNly6G9tBavPevNqR\";\n\n//const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\n\nexport const Tag = () => {\n  _s();\n  const [gif, setGif] = useState('');\n  const [tag, setTag] = useState('');\n  const [loader, setLoader] = useState('false');\n  async function fetchData() {\n    setLoader(true); // because til the time the gif is coming we want the spinner to show on the screen\n    const url = `https://api.giphy.com/v1/gifs/random?api_key=${REACT_APP_GIPHY_API_KEY}`;\n    const output = await axios.get(url); //axios is used to fetch the data by the get method and we are calling that url inside it.\n    console.log(output);\n    console.log(output.data.data.images.downsized_large.url);\n    const gifurl = output.data.data.images.downsized_large.url;\n    setGif(gifurl);\n    setLoader(false); // after the network call has been made we want the loader to go away from the screen\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  function eventHandler(event) {\n    console.log(event.target.value);\n    setTag(event.target.value);\n  }\n  function SubmitHandler(event) {\n    fetchData();\n  }\n  {\n    loader ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: gif,\n      width: 450,\n      alt: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: gif,\n      width: 450,\n      alt: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"w-10/12 text lg py-2 rounded-lg mb-[3px] text-center\",\n      onChange: eventHandler,\n      value: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SubmitHandler,\n      children: \"Generate Gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Tag, \"1lMA1FmYlL8+u5gEe2Mv/uzuorY=\");\n_c = Tag;\nvar _c;\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"names":["React","useEffect","useState","axios","Spinner","jsxDEV","_jsxDEV","REACT_APP_GIPHY_API_KEY","Tag","_s","gif","setGif","tag","setTag","loader","setLoader","fetchData","url","output","get","console","log","data","images","downsized_large","gifurl","eventHandler","event","target","value","SubmitHandler","fileName","_jsxFileName","lineNumber","columnNumber","src","width","alt","children","className","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gandharv Munjal/Downloads/gif generator/src/components/Tag.js"],"sourcesContent":["/* eslint-disable no-lone-blocks */\r\nimport React, { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Spinner } from \"./Spinner\";\r\nconst REACT_APP_GIPHY_API_KEY = \"XwhWiqUuVYskOnSfNly6G9tBavPevNqR\";\r\n\r\n//const API_KEY = process.env.REACT_APP_GIPHY_API_KEY;\r\n\r\nexport const Tag = () => {\r\n  const [gif, setGif] = useState('');\r\n  const[tag,setTag] = useState('');\r\n  const [loader , setLoader] = useState('false');\r\n\r\n  async function fetchData() {\r\n    setLoader(true);// because til the time the gif is coming we want the spinner to show on the screen\r\n    const url = `https://api.giphy.com/v1/gifs/random?api_key=${REACT_APP_GIPHY_API_KEY}`;\r\n\r\n    const output = await axios.get(url); //axios is used to fetch the data by the get method and we are calling that url inside it.\r\n    console.log(output);\r\n    console.log(output.data.data.images.downsized_large.url );\r\n    const gifurl= output.data.data.images.downsized_large.url;\r\n   setGif(gifurl)\r\n   setLoader(false);// after the network call has been made we want the loader to go away from the screen\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    \r\n  }, []);\r\n  function eventHandler(event){\r\n    console.log(event.target.value);\r\n setTag(event.target.value)\r\n  }\r\n\r\n  function SubmitHandler(event) {\r\n   fetchData();\r\n  }\r\n\r\n{\r\n    loader ? (<Spinner/>) : (<img src={gif} width={450} alt=\"a\" />)\r\n}\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <img src={gif}width={450} alt=\"a\" />\r\n\r\n          <input className=\"w-10/12 text lg py-2 rounded-lg mb-[3px] text-center\"\r\n          onChange={eventHandler}\r\n          value={tag}/>\r\n\r\n\r\n\r\n      <button onClick={SubmitHandler}>Generate Gif</button>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,MAAMC,uBAAuB,GAAG,kCAAkC;;AAElE;;AAEA,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACU,GAAG,EAACC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACY,MAAM,EAAGC,SAAS,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAE9C,eAAec,SAASA,CAAA,EAAG;IACzBD,SAAS,CAAC,IAAI,CAAC,CAAC;IAChB,MAAME,GAAG,GAAI,gDAA+CV,uBAAwB,EAAC;IAErF,MAAMW,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC;IACrCG,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAACA,IAAI,CAACC,MAAM,CAACC,eAAe,CAACP,GAAI,CAAC;IACzD,MAAMQ,MAAM,GAAEP,MAAM,CAACI,IAAI,CAACA,IAAI,CAACC,MAAM,CAACC,eAAe,CAACP,GAAG;IAC1DN,MAAM,CAACc,MAAM,CAAC;IACdV,SAAS,CAAC,KAAK,CAAC,CAAC;EAElB;;EAEAd,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EAEb,CAAC,EAAE,EAAE,CAAC;EACN,SAASU,YAAYA,CAACC,KAAK,EAAC;IAC1BP,OAAO,CAACC,GAAG,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAClChB,MAAM,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB;EAEA,SAASC,aAAaA,CAACH,KAAK,EAAE;IAC7BX,SAAS,CAAC,CAAC;EACZ;EAEF;IACIF,MAAM,gBAAIR,OAAA,CAACF,OAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAAK5B,OAAA;MAAK6B,GAAG,EAAEzB,GAAI;MAAC0B,KAAK,EAAE,GAAI;MAACC,GAAG,EAAC;IAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;EACnE;EAEE,oBACE5B,OAAA;IAAAgC,QAAA,gBAEEhC,OAAA;MAAK6B,GAAG,EAAEzB,GAAI;MAAA0B,KAAK,EAAE,GAAI;MAACC,GAAG,EAAC;IAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEhC5B,OAAA;MAAOiC,SAAS,EAAC,sDAAsD;MACvEC,QAAQ,EAAEd,YAAa;MACvBG,KAAK,EAAEjB;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAIjB5B,OAAA;MAAQmC,OAAO,EAAEX,aAAc;MAAAQ,QAAA,EAAC;IAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjDWD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}